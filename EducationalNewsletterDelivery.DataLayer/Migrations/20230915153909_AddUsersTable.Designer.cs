// <auto-generated />
using System;
using EducationalNewsletterDelivery.DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EducationalNewsletterDelivery.DataLayer.Migrations
{
    [DbContext(typeof(EducationalNewsletterDeliveryDBContext))]
    [Migration("20230915153909_AddUsersTable")]
    partial class AddUsersTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EducationalNewsletterDelivery.DataLayer.Entities.DeliveredNewsletter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DeliveredDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewsletterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReceivedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SeenDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NewsletterId");

                    b.HasIndex("UserId");

                    b.ToTable("DeliveredNewsletters");
                });

            modelBuilder.Entity("EducationalNewsletterDelivery.DataLayer.Entities.Newsletter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Newsletters");
                });

            modelBuilder.Entity("EducationalNewsletterDelivery.DataLayer.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EducationalNewsletterDelivery.DataLayer.Entities.DeliveredNewsletter", b =>
                {
                    b.HasOne("EducationalNewsletterDelivery.DataLayer.Entities.Newsletter", "Newsletter")
                        .WithMany()
                        .HasForeignKey("NewsletterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducationalNewsletterDelivery.DataLayer.Entities.User", "User")
                        .WithMany("DeliveredNewsletters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Newsletter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EducationalNewsletterDelivery.DataLayer.Entities.User", b =>
                {
                    b.Navigation("DeliveredNewsletters");
                });
#pragma warning restore 612, 618
        }
    }
}
